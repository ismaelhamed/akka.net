ecostruxure.persistence {
	read-side {
		# If the role is not specified (or empty) all nodes in the cluster are used.
		run-on-role = "write-model"
	}
	cluster.distribution {
		# Each entity is pinged at this interval. Each node will ping this often, so this interval can be quite long.
		ensure-active-interval = 25s
	}
}

akka {
    loggers = ["Akka.Logger.Serilog.SerilogLogger, Akka.Logger.Serilog"]
    loglevel = DEBUG

	actor {
		provider = cluster  
	}

    remote {
		dot-netty.tcp {
			hostname = "127.0.0.1"
			port = 2551
		}
	}

    cluster {
		seed-nodes = ["akka.tcp://persistent-benchmark@127.0.0.1:2551"]
		roles = ["write-model"]
        sharding {
            remember-entities = false
            journal-plugin-id = "akka.persistence.journal.sharding"
            #snapshot-plugin-id = "akka.persistence.snapshot-store.sharding"
        }

		# auto downing is NOT safe for production deployments.
		# you may want to use it during development, read more about it in the docs.
		auto-down-unreachable-after = 10s     
	}

    persistence {
        query.journal.sql {
            class = "Akka.Persistence.Query.Sql.SqlReadJournalProvider, Akka.Persistence.Query.Sql"
			refresh-interval = 3s
			max-buffer-size = 200
        }
        journal {
            plugin = "akka.persistence.journal.oracle"
            #auto-start-journals = ["akka.persistence.journal.oracle"]
            auto-start-journals = ["akka.persistence.journal.oracle", "deviceevent-0.journal", "deviceevent-1.journal", "deviceevent-2.journal", "deviceevent-3.journal", "deviceevent-4.journal"]
            oracle {
                class = "Akka.Persistence.Oracle.Journal.BatchingOracleJournal, Akka.Persistence.Oracle"
                table-name = EVENTJOURNAL
                schema-name = AKKA_PERSISTENCE_TEST
                auto-initialize = on
                connection-string = "Data Source=localhost:1521/XE;User Id=AKKA_PERSISTENCE_TEST;Password=akkadotnet;"
            }
		    sharding {
                class = "Akka.Persistence.Oracle.Journal.BatchingOracleJournal, Akka.Persistence.Oracle"
                table-name = EVENTJOURNAL
                schema-name = AKKA_PERSISTENCE_TEST
                auto-initialize = on
                connection-string = "Data Source=localhost:1521/XE;User Id=AKKA_PERSISTENCE_TEST;Password=akkadotnet;"
		    }
        }
    }
}

#awesomejournal = ${akka.persistence.journal.oracle}
#deviceevent-0 = ${akka.persistence.query.journal.sql}
#deviceevent-0.write-plugin = "awesomejournal"
#deviceevent-0journal = ${akka.persistence.journal.oracle}

deviceevent-0 {
    write-plugin = "deviceevent-0.journal"
    journal = ${akka.persistence.journal.oracle}
    class = ${akka.persistence.query.journal.sql.class}
	refresh-interval = ${akka.persistence.query.journal.sql.refresh-interval}
	max-buffer-size = ${akka.persistence.query.journal.sql.max-buffer-size}
}
deviceevent-1 {	
    write-plugin = "deviceevent-1.journal"
    journal = ${akka.persistence.journal.oracle}
    class = ${akka.persistence.query.journal.sql.class}
	refresh-interval = ${akka.persistence.query.journal.sql.refresh-interval}
	max-buffer-size = ${akka.persistence.query.journal.sql.max-buffer-size}
}
deviceevent-2 {	
    write-plugin = "deviceevent-2.journal"
    journal = ${akka.persistence.journal.oracle}
    class = ${akka.persistence.query.journal.sql.class}
	refresh-interval = ${akka.persistence.query.journal.sql.refresh-interval}
	max-buffer-size = ${akka.persistence.query.journal.sql.max-buffer-size}
}
deviceevent-3 {	
    write-plugin = "deviceevent-3.journal"
    journal = ${akka.persistence.journal.oracle}
    class = ${akka.persistence.query.journal.sql.class}
	refresh-interval = ${akka.persistence.query.journal.sql.refresh-interval}
	max-buffer-size = ${akka.persistence.query.journal.sql.max-buffer-size}
}
deviceevent-4 {	
    write-plugin = "deviceevent-4.journal"
    journal = ${akka.persistence.journal.oracle}
    class = ${akka.persistence.query.journal.sql.class}
	refresh-interval = ${akka.persistence.query.journal.sql.refresh-interval}
	max-buffer-size = ${akka.persistence.query.journal.sql.max-buffer-size}
}